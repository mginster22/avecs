generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  password  String
  firstName String?
  lastName  String?

  phone String
  role  Role   @default(USER)

  favorites Favorite[]
  orders    Order[]
  products  Product[]
  carts     Cart[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Favorite {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  productId String
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // —á—Ç–æ–±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª—Å—è
}

enum Role {
  USER
  ADMIN
}

model Product {
  id           String   @id @default(cuid())
  category     String
  categorySlug String
  title        String
  gender       String
  model        String
  slug         String   @unique
  price        Int
  color        String
  colorLabel   String
  img          String[] // –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  season       String

  composition   String[]
  peculiarities String[]
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userId     String?
  user       User?         @relation(fields: [userId], references: [id])
  favorites  Favorite[]
  orderItems OrderItem[]
  sizes      ProductSize[]
  cartItems  CartItem[]
}

model ProductSize {
  id       String @id @default(cuid())
  size     String
  quantity Int

  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@unique([productId, size])
}

model Cart {
  id        String     @id @default(cuid())
  items     CartItem[]
  userId    String?
  user      User?      @relation(fields: [userId], references: [id])
  guestId   String?    @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String @id @default(cuid())
  cartId    String
  productId String
  quantity  Int
  size      String

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(cuid())

  orderNumber Int @unique

  userId  String?
  guestId String?

  user    User?       @relation(fields: [userId], references: [id])
  items   OrderItem[]
  total   Int // –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
  status  OrderStatus @default(PENDING) // üîπ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  payment PaymentType @default(CASH) // üîπ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã
  isPaid  Boolean     @default(false) // üîπ —Ñ–ª–∞–≥ –æ–ø–ª–∞—Ç—ã

  email String
  phone String

  region String
  city   String
  branch String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  size      String
  price     Int // üîπ —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING // –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–æ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
  PAID // –æ–ø–ª–∞—á–µ–Ω
  SHIPPED // –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
  COMPLETED // –¥–æ—Å—Ç–∞–≤–ª–µ–Ω
  CANCELED // –æ—Ç–º–µ–Ω—ë–Ω
}

enum PaymentType {
  CASH // –Ω–∞–ª–∏—á–Ω—ã–µ
  CARD // –∫–∞—Ä—Ç–∞ (LiqPay –∏ —Ç.–¥.)
}
